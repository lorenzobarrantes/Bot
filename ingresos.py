item = ''
conti = False
lista = []


def finalizar(lis):
    global item
    item = ''
    return lis, True


def menu_ing():
    global item
    item = ''
    menu = ("‚Üò Ingresos\n"
            "\n"
            "Seleccione la consulta\n"
            "\n"
            "A. Se ingres√≥ mal un remito\n"
            "B. Se concili√≥ mal la mercader√≠a\n"
            "C. Ubicaci√≥n incorrecta de la mercader√≠a\n"
            "D. Crear Orden de Traslado\n"
            "E. Menu Principal\n"
            "\n"
            'Recuerde puede escribir "Finalizar" en cualquier momento de la conversaci√≥n para terminarla.'
            )
    return menu


def option_ubicar(text):
    global item

    if item == 'ubicar':
        if text == 'a' or 'completa' in text:
            exp = '‚Äº Es crucial enfatizar que *NUNCA* debe confirmar una Orden de Traslado sin haberla ejecutado ' \
                  'efectivamente. Esta acci√≥n podr√≠a provocar problemas operativos graves en su almac√©n. Recomendamos ' \
                  'encarecidamente que verifique la ejecuci√≥n de la orden antes de confirmarla. '
            lista.append(exp)
            exp = "Para solucionar esto, debe dirigirse al almac√©n y generar un movimiento de mercader√≠a interno.\n" \
                  "Para obtener m√°s informaci√≥n al respecto, puede acceder a mi Men√∫ Principal > Gu√≠a de Usuario, " \
                  "donde encontrar√° el paso a paso del proceso que debe seguir."

            lista.append(exp)
            return finalizar(lista)
        elif text == 'b' or 'pendiente' in text:
            exp = 'Para este caso, editar una orden requiere que identifique cu√°ntos palets se van a editar, ' \
                  'ya que existen dos formas de hacerlo:'
            lista.append(exp)
            exp = '1Ô∏è‚É£ Si son pocos palets, dir√≠jase al bot√≥n "Ver Orden" üëÅÔ∏è, donde encontrar√° el listado de palets a ' \
                  'ubicar junto con un √≠cono de reemplazo üîÅ. Al hacer clic en √©l, podr√° seleccionar la nueva ' \
                  'ubicaci√≥n para el palet. '
            lista.append(exp)
            exp = '2Ô∏è‚É£ Si es una cantidad considerable de palets, le recomiendo dirigirse a "Editar Orden" ‚úè, donde ver√° ' \
                  'un listado de la mercader√≠a seleccionada para el traslado. Puede ubicar esa mercader√≠a dentro de ' \
                  '"Resultados de B√∫squeda" para mover cierta cantidad de palets y dejar los dem√°s en staging, ' \
                  'o mover todos. Luego, haga clic en "Siguiente" para ir a la pantalla donde seleccionar√° realmente ' \
                  'd√≥nde ubicar los palets de su Orden de Traslado. '
            lista.append(exp)
            exp = "3Ô∏è‚É£ Como √∫ltima opci√≥n, puedes anular la Orden de Traslado y luego crear una nueva. Selecciona " \
                  "'Nueva' y luego, en la pesta√±a que se abre, elige 'Orden de Ingreso'. Busca tu ingreso y vuelve a " \
                  "ubicar la mercanc√≠a en el almac√©n. "
            lista.append(exp)
            exp = 'Independientemente de los pasos que haya seguido, una vez aceptado, la orden estar√° editada y ' \
                  'lista para ser ubicada en el almac√©n '
            lista.append(exp)
            return finalizar(lista)
        elif text == 'c' or 'no la encuentro' in text:
            exp = 'Por favor, dentro de "√ìrdenes de Traslado", revise el filtro. Aseg√∫rese de que est√© configurado en ' \
                  '"Pendiente". Si la orden no se encuentra all√≠, c√°mbielo a "Completa" y verifique nuevamente.'
            lista.append(exp)
            exp = 'Si la Orden se encuentra en estado "Borrador" o "Anulada", puede crear una nueva haciendo clic en ' \
                  'el bot√≥n "Nuevo". Luego, puede buscar la mercader√≠a por orden de ingreso. ' \
                  'Puede visualizar el proceso de creaci√≥n de una Orden de Traslado en la Gu√≠a de Usuario ubicada en ' \
                  'mi Men√∫ Principal. '
            lista.append(exp)
            exp = 'Le voy a volver a mandar las opciones en caso de que la haya encontrado a la Orden en Completa. ' \
                  'Recuerde que puede escribir "Finalizar" en cualquier momento para terminar esta conversaci√≥n. ' \
                  'Muchas gracias. '
            lista.append(exp)
            texto = ('¬øEn que estado esta la Orden de Traslado?\n'
                     '\n'
                     'A. Completa\n'
                     'B. Pendiente\n'
                     'C. No la encuentro\n'
                     'D. Atr√°s')
            lista.append(texto)
            return lista, False
        elif text == 'd' or 'atras' in text:
            item = ''
            return 'menu ingresos', False
        else:
            return 'error', False


def option_remito(text):
    global item

    def menu_remito():
        texto = ("En que dato se equivoco usted?\n"
                 "\n"
                 "A. Chofer\n"
                 "B. Vehiculo\n"
                 "C. Numero de Remito\n"
                 "D. Cantidad de mercader√≠a\n"
                 "E. Atr√°s")
        lista.append(texto)

    if item == 'remito':
        if text == 'a' or 'completa' in text:
            item = 'remito - completa'
            exp = "Cuando se completa el ingreso, es importante tener en cuenta que no se puede realizar ninguna " \
                  "edici√≥n posterior, debido a que la orden de traslado esta confirmada. Por lo tanto, es crucial " \
                  "seguir un conjunto espec√≠fico de pasos para corregir " \
                  "cualquier error. Ahora, por favor seleccione la opci√≥n que corresponda al error cometido: "
            lista.append(exp)
            menu_remito()
            return lista, False
        elif text == 'b' or text == 'c' or 'conciliacion' in text:
            item = 'remito - conciliacion'
            exp = 'En este caso, todav√≠a tiene la oportunidad de editar el remito.'
            lista.append(exp)
            exp = 'Para editar: -Numero de Remito y Cantidad de mercader√≠a, ' \
                  'simplemente dir√≠jase ' \
                  'a *Operaciones > Ingresos > Ordenes de ingreso*, identifique la orden ingresada y haga clic en el ' \
                  '√≠cono de l√°piz para editar. Se abrir√° una ventana donde ver√° el/los remitos cargados y tendr√° la ' \
                  'posibilidad de editarlos seg√∫n sea necesario.'
            lista.append(exp)
            exp = 'Para editar: Chofer o Vehiculo,\n' \
                  'Anule la orden de ingreso e ingrese nuevamente el chofer y vehiculo correcto.\n' \
                  'Recuerde anular tambien el ingreso del incorrecto desde *Operaciones > Arribos y partidas > ' \
                  'Dashboard arribos y partidas*, buscar el ingreso incorrecto y anularlo '
            lista.append(exp)
            return finalizar(lista)
        elif text == 'd' or 'menu' in text or "atras" in text:
            item = ''
            return 'menu ingresos', False
        else:
            item = ''
            return 'error', False


    elif item == 'remito - completa':
        # responde a menu_remito()
        if text == 'a' or 'chofer' in text or text == 'b' or 'vehiculo' in text or text == 'c' or 'remito' in text:
            exp = 'Actualmente, no contamos con la capacidad de modificar dicho dato asignado en un remito ya ' \
                  'confirmado. Sin embargo, ' \
                  'le tranquilizar√° saber que este aspecto solo influye en la trazabilidad y no afecta de manera ' \
                  'alguna a nuestras operaciones. '
            lista.append(exp)
            exp = 'En caso de necesitar alg√∫n cambio, podr√° acceder a nuestro men√∫ principal y solicitar el ' \
                  'formulario para reportar errores. Este reporte entra en la categor√≠a: *Importante* y sera atendido ' \
                  'cuanto antes. Muchas gracias. '
            lista.append(exp)
            return finalizar(lista)
        elif text == 'd' or 'mercaderia' in text:
            exp = 'Actualmente, no contamos con la capacidad para modificar la cantidad de mercanc√≠a cargada en un ' \
                  'remito Confirmado. '
            lista.append(exp)
            exp = 'Sin embargo, si ha cargado *m√°s mercanc√≠a de la indicada en el remito*, \n' \
                  'Ubique correctamente y confirme la orden de traslado en el almac√©n y ' \
                  'le recomiendo que visite el ' \
                  'almac√©n y realice una baja manual de la cantidad excedente. '
            lista.append(exp)
            exp = 'Para aprender c√≥mo realizar una baja manual, puede dirigirse a mi Men√∫ Principal > Consultas > ' \
                  'Inventario > Alta y Baja manual. '
            lista.append(exp)
            exp = 'Si, por el contrario, ha ingresado menos mercanc√≠a de la indicada en el remito, le sugiero que ' \
                  'confirme la orden de traslado al almac√©n y ' \
                  'realice un ingreso adicional con un n√∫mero de remito diferenciado agregando "-1". A partir de ah√≠, ' \
                  'podr√° agregar la mercanc√≠a faltante. Para luego confirmar la segunda Orden de Traslado y completar ' \
                  'el proceso de ingreso. '
            lista.append(exp)
            return finalizar(lista)
        elif text == 'e' or 'atras' in text:
            item = ''
            return option_ing('a')
        else:
            item = ''
            return 'error', False


def option_ing(text):
    global item
    global lista
    lista = []
    if "menu principal" in text or 'pdf' in text or 'menu ingresos' in text:
        item = ''
        if 'menu principal' in text:
            return 'menu principal', False
        elif 'menu ingresos' in text:
            return 'menu ingresos', False
        else:
            return 'pdf', False
    elif item == '':

        if text == 'a' or "ingrese mal un remito" in text:
            item = 'remito'
            exp = "En caso de ingresar incorrectamente un remito, ya sea la cantidad de mercanc√≠a o su n√∫mero, " \
                  "es importante seguir un procedimiento espec√≠fico para corregirlo. Primero, dir√≠jase a la secci√≥n " \
                  "de *Operaciones > Ingresos > Ordenes de Ingreso* en el sistema. Desde all√≠, identifique y visualice " \
                  "el estado de la orden de ingreso correspondiente al remito incorrecto. "
            lista.append(exp)
            texto = ('¬øEn que estado esta la Orden de Ingreso?\n'
                     '\n'
                     'A. Completa\n'
                     'B. En Conciliaci√≥n\n'
                     'C. Pendiente de conciliaci√≥n\n'
                     'D. Atr√°s')
            lista.append(texto)
            return lista, conti

        elif text == 'b' or 'concilie mal la mercaderia' in text:
            item = 'conciliar'
            exp = "Si ha realizado una conciliaci√≥n incorrecta, puede corregirla siempre y cuando la " \
                  "orden de ingreso a√∫n no haya sido confirmada. Para ello, dir√≠jase a *Operaciones > Ingresos > " \
                  "Ordenes de Ingreso* y localice el bot√≥n de conciliaci√≥n. Desde all√≠, podr√° editar la conciliaci√≥n " \
                  "seg√∫n sea necesario."
            lista.append(exp)
            exp = "*Si encuentra discrepancias entre la cantidad de mercanc√≠a* registrada en la conciliaci√≥n y la " \
                  "cantidad en el remito, es posible que haya faltantes o sobrantes. Le recomendamos revisar " \
                  "detenidamente ambos n√∫meros (remito y conciliaci√≥n) para asegurarse de que coincidan correctamente. "
            lista.append(exp)
            exp = "*En el caso de que la orden de ingreso este completa.*\n" \
                  "Para corregir la mercader√≠a debera dar de baja manual la mercader√≠a excedente desde el almac√©n\n" \
                  "Para aprender c√≥mo realizar una baja manual, puede dirigirse a mi Men√∫ Principal > Consultas >" \
                  "Inventario > Alta y Baja manual."
            lista.append(exp)
            exp = 'Si confirmo la orden con mercader√≠a faltante, realice un ingreso adicional con un n√∫mero de remito ' \
                  'diferenciado agregando "-1". A partir de ah√≠, podr√° agregar la mercanc√≠a faltante.'
            lista.append(exp)
            return finalizar(lista)

        elif text == 'c' or 'ubique mal la mercaderia' in text:
            item = 'ubicar'
            exp = "Si ha ubicado incorrectamente la mercanc√≠a, le recomiendo dirigirse a *Operaciones > Ingreso > " \
                  "Ordenes de Traslado*, y comentarme. "
            lista.append(exp)
            texto = ('¬øEn que estado esta la Orden de Traslado?\n'
                     '\n'
                     'A. Completa\n'
                     'B. Pendiente\n'
                     'C. No la encuentro\n'
                     'D. Atr√°s')
            lista.append(texto)
            return lista, conti

        elif text == 'd' or 'orden traslado' in text:
            item = 'ot'
            exp = "Para crear una Orden de Traslado, la Orden de Ingreso debe estar en estado 'Completa'. Esto " \
                  "significa que la orden ha sido conciliada y su descarga aceptada. En el almac√©n, la mercanc√≠a " \
                  "estar√≠a en la zona de staging, ya verificada (etiquetada y con la planilla de control de ingreso " \
                  "completada) y lista para ser ubicada. \n" \
                  "*Aqu√≠ tienes dos formas de asignar la ubicaci√≥n, ya sea de manera manual o autom√°tica.*"
            lista.append(exp)
            exp = "Para realizarlo de forma *autom√°tica*, sigue estos pasos: \n" \
                  "1. Desde la secci√≥n de '√ìrdenes de ingreso', haz clic en la opci√≥n 'Ubicar autom√°ticamente " \
                  "mercader√≠a'. \n" \
                  "2. Al hacer clic en esta opci√≥n, aparecer√° la siguiente ventana, donde seleccionando la Nave y " \
                  "aceptando, la orden sera creada. "
            lista.append(exp)
            img = 'img_0.png'
            lista.append(img)
            exp = "Para realizarlo de manera *manual*, sigue estos pasos:\n" \
                  "1. Ve a la secci√≥n de '√ìrdenes de traslado' y haz clic en 'Nuevo'. Se abrir√° el siguiente men√∫, " \
                  "donde deber√°s seleccionar 'Orden de ingreso', como se indica en la figura:\n "
            lista.append(exp)
            img = 'img_1.png'
            lista.append(img)
            exp = "2. Una vez dentro de '√ìrdenes de ingreso', haz clic en 'Buscar' y selecciona la orden deseada (" \
                  "busca el n√∫mero de orden con el que estabas trabajando). Luego, selecciona la orden y haz clic en " \
                  "'Aceptar'.\n" \
                  "Una vez aceptado le aparecer√°n los resultados de la b√∫squeda de la siguiente manera:"
            lista.append(exp)
            img = 'img_2.png'
            lista.append(img)
            exp = "3. Selecciona los productos deseados haciendo clic en ellos. Utiliza la flecha simple para enviar " \
                  "productos individuales o la flecha doble para enviar todos los productos desde la secci√≥n de " \
                  "'Resultados de B√∫squeda' hacia la secci√≥n de 'Mercader√≠a Seleccionada' para su traslado.\n" \
                  "4. Despu√©s de verificar que la mercanc√≠a es correcta, haz clic en 'Siguiente' en la esquina " \
                  "inferior derecha de la pantalla.\n" \
                  "5. Durante esta fase del proceso, se solicitar√° seleccionar los productos identificados y " \
                  "posteriormente asignarles una ubicaci√≥n, seleccion√°ndola en el almac√©n para luego ubicarla " \
                  "cliqueando el bot√≥n 'Agregar'. Una vez completada esta tarea, se deber√° confirmar la acci√≥n " \
                  "haciendo clic en 'Aceptar', ubicado en la esquina inferior derecha de la pantalla."
            lista.append(exp)
            return finalizar(lista)

        elif text == 'e' or 'atras' in text or 'menu principal' in text:
            return 'menu principal', False
        else:
            return 'error', False

    elif item.startswith('remito'):
        return option_remito(text)
    elif item.startswith('ubicar'):
        return option_ubicar(text)
